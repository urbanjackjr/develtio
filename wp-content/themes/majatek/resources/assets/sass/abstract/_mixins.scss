@use "variables"as *;

/// Responsive breakpoint manager
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
@mixin respond-to($breakpoint) {
	$raw-query: map-get($breakpoints, $breakpoint);

	@if $raw-query {
		$query: if(type-of($raw-query)=="string",
				unquote($raw-query),
				inspect($raw-query));

		@if $breakpoint=="max"or $breakpoint=="2k"or $breakpoint=="4k" {
			@media (min-width: #{$query}) {
				@content;
			}
		}

		@else {
			@media (max-width: #{$query}) {
				@content;
			}
		}
	}

	@else {
		@error 'No value found for `#{$breakpoint}`. '
		+'Please make sure it is defined in `$breakpoints` map.';
	}
}

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
	@if $self {

		&,
		&:hover,
		&:active,
		&:focus,
		&:focus-visible,
		&--active {
			@content;
		}
	}

	@else {

		&:hover,
		&:active,
		&:focus,
		&:focus-visible,
		&--active {
			@content;
		}
	}
}

@mixin hamburger($size: 1rem, $color: $accent-blue) {
	.hamburger {
		width: $size * 1.5;
		height: $size;
		display: none;
		flex-direction: column;
		justify-content: space-between;
		cursor: pointer;

		@include respond-to("large") {
			display: flex;
		}

		&__line {
			width: 100%;
			height: calc($size / 8);
			background: $color;
			transition: transform .3s ease;
		}

		&--active &__line:nth-child(2) {
			opacity: 0;
		}

		&--active &__line:first-child {
			transform: translateY(calc($size / 2 - $size / 18)) rotate(-45deg);
		}

		&--active &__line:last-child {
			transform: translateY(calc($size / 18 - $size / 2)) rotate(45deg);
		}
	}
}